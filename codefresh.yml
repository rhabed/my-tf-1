version: "1.0"
stages:
  - "clone"
  - "test"
  - "deploy"
  - "destroy"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "rhabed/my-tf-1"
    revision: "${{CF_REVISION}}"
    git: "github"
    stage: "clone"


  test:
    title: "Running test"
    image: "alpine/terragrunt" 
    working_directory: "${{clone}}" # Running command where code cloned
    arguments:
      AWS_ACCESS_KEY_ID: ${{AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{AWS_SECRET_ACCESS_KEY}}
    commands:
      # - cf_export TF_VAR_action=${{ACTION}}
      - echo ${{CF_BUILD_TRIGGER}}
      - terragrunt run-all init
      - terragrunt run-all validate
      - terragrunt run-all plan -out ${{CF_VOLUME_PATH}}/${{CF_BUILD_ID}}.tfplan
      # - terraform validate
      # - sed -i 's|ACTION|'"${{ACTION}}"'|g' ./my.tfvars
      # - sed -i 's|HOST_ID|'"${{HOST_ID}}"'|g' ./my.tfvars
      # - cat ./my.tfvars
      # - terraform plan -var-file=my.tfvars -out ${{CF_VOLUME_PATH}}/${{CF_BUILD_ID}}.tfplan
    stage: "test"

  deploy:
    title: "Running Deploy"
    #image: "hashicorp/terraform:latest" 
    image: "alpine/terragrunt" 
    working_directory: "${{clone}}" # Running command where code cloned
    arguments:
      AWS_ACCESS_KEY_ID: ${{AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{AWS_SECRET_ACCESS_KEY}}
    commands:
      - echo "Applying Plan"
      - terragrunt run-all apply --terragrunt-non-interactive --terragrunt-log-level trace
    stage: "deploy"

  remove_sqs2:
    title: "Remove SQS 2"
    #image: "hashicorp/terraform:latest" 
    image: "alpine/terragrunt" 
    working_directory: "${{clone}}" # Running command where code cloned
    arguments:
      AWS_ACCESS_KEY_ID: ${{AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{AWS_SECRET_ACCESS_KEY}}
    commands:
      - echo "Destroying SQS 2"
      - cd ./sqs2
      - terragrunt destroy -auto-approve --terragrunt-non-interactive --terragrunt-log-level trace
    stage: "deploy"

  generate_destroy_plan:
    title: "Plan Destroy"
    stage: destroy
    image: "alpine/terragrunt" 
    working_directory: "${{clone}}" # Running command where code cloned
    arguments:
      AWS_ACCESS_KEY_ID: ${{AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{AWS_SECRET_ACCESS_KEY}}
    commands:
      - terragrunt run-all plan -destroy
    when: &destroy
      condition:
        all:
          destroy: '"${{DESTROY}}" == "yes"'
  
  approve_destroy:
    type: pending-approval
    stage: destroy
    title: Approve Destroy
    timeout:
      duration: 12
      finalState: denied
    when: *destroy

  destroy:
    title: "Running Destroy"
    stage: destroy
    image: "alpine/terragrunt" 
    working_directory: "${{clone}}" # Running command where code cloned
    arguments:
      AWS_ACCESS_KEY_ID: ${{AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{AWS_SECRET_ACCESS_KEY}}
    commands:
      - terragrunt run-all destroy --terragrunt-non-interactive --terragrunt-log-level trace
    when: *destroy
    